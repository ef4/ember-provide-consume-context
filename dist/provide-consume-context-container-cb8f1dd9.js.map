{"version":3,"file":"provide-consume-context-container-cb8f1dd9.js","sources":["../../node_modules/@glimmer/util/dist/modules/es2017/lib/collections.js","../src/-private/provide-consume-context-container.ts"],"sourcesContent":["export function dict() {\n  return Object.create(null);\n}\nexport function isDict(u) {\n  return u !== null && u !== undefined;\n}\nexport function isObject(u) {\n  return typeof u === 'function' || typeof u === 'object' && u !== null;\n}\nexport class StackImpl {\n  constructor(values = []) {\n    this.current = null;\n    this.stack = values;\n  }\n\n  get size() {\n    return this.stack.length;\n  }\n\n  push(item) {\n    this.current = item;\n    this.stack.push(item);\n  }\n\n  pop() {\n    let item = this.stack.pop();\n    let len = this.stack.length;\n    this.current = len === 0 ? null : this.stack[len - 1];\n    return item === undefined ? null : item;\n  }\n\n  nth(from) {\n    let len = this.stack.length;\n    return len < from ? null : this.stack[len - from];\n  }\n\n  isEmpty() {\n    return this.stack.length === 0;\n  }\n\n  toArray() {\n    return this.stack;\n  }\n\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL0BnbGltbWVyL3V0aWwvbGliL2NvbGxlY3Rpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU0sU0FBVSxJQUFWLEdBQWM7QUFDbEIsU0FBTyxNQUFNLENBQUMsTUFBUCxDQUFjLElBQWQsQ0FBUDtBQUNEO0FBRUQsT0FBTSxTQUFVLE1BQVYsQ0FBb0IsQ0FBcEIsRUFBd0I7QUFDNUIsU0FBTyxDQUFDLEtBQUssSUFBTixJQUFjLENBQUMsS0FBSyxTQUEzQjtBQUNEO0FBRUQsT0FBTSxTQUFVLFFBQVYsQ0FBc0IsQ0FBdEIsRUFBMEI7QUFDOUIsU0FBTyxPQUFPLENBQVAsS0FBYSxVQUFiLElBQTRCLE9BQU8sQ0FBUCxLQUFhLFFBQWIsSUFBeUIsQ0FBQyxLQUFLLElBQWxFO0FBQ0Q7QUFFRCxPQUFNLE1BQU8sU0FBUCxDQUFnQjtBQUlwQixFQUFBLFdBQUEsQ0FBWSxNQUFBLEdBQWMsRUFBMUIsRUFBNEI7QUFGckIsU0FBQSxPQUFBLEdBQXFCLElBQXJCO0FBR0wsU0FBSyxLQUFMLEdBQWEsTUFBYjtBQUNEOztBQUVELE1BQVcsSUFBWCxHQUFlO0FBQ2IsV0FBTyxLQUFLLEtBQUwsQ0FBVyxNQUFsQjtBQUNEOztBQUVELEVBQUEsSUFBSSxDQUFDLElBQUQsRUFBUTtBQUNWLFNBQUssT0FBTCxHQUFlLElBQWY7QUFDQSxTQUFLLEtBQUwsQ0FBVyxJQUFYLENBQWdCLElBQWhCO0FBQ0Q7O0FBRUQsRUFBQSxHQUFHLEdBQUE7QUFDRCxRQUFJLElBQUksR0FBRyxLQUFLLEtBQUwsQ0FBVyxHQUFYLEVBQVg7QUFDQSxRQUFJLEdBQUcsR0FBRyxLQUFLLEtBQUwsQ0FBVyxNQUFyQjtBQUNBLFNBQUssT0FBTCxHQUFlLEdBQUcsS0FBSyxDQUFSLEdBQVksSUFBWixHQUFtQixLQUFLLEtBQUwsQ0FBVyxHQUFHLEdBQUcsQ0FBakIsQ0FBbEM7QUFFQSxXQUFPLElBQUksS0FBSyxTQUFULEdBQXFCLElBQXJCLEdBQTRCLElBQW5DO0FBQ0Q7O0FBRUQsRUFBQSxHQUFHLENBQUMsSUFBRCxFQUFhO0FBQ2QsUUFBSSxHQUFHLEdBQUcsS0FBSyxLQUFMLENBQVcsTUFBckI7QUFDQSxXQUFPLEdBQUcsR0FBRyxJQUFOLEdBQWEsSUFBYixHQUFvQixLQUFLLEtBQUwsQ0FBVyxHQUFHLEdBQUcsSUFBakIsQ0FBM0I7QUFDRDs7QUFFRCxFQUFBLE9BQU8sR0FBQTtBQUNMLFdBQU8sS0FBSyxLQUFMLENBQVcsTUFBWCxLQUFzQixDQUE3QjtBQUNEOztBQUVELEVBQUEsT0FBTyxHQUFBO0FBQ0wsV0FBTyxLQUFLLEtBQVo7QUFDRDs7QUFwQ21CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGljdCwgT3B0aW9uLCBTdGFjayB9IGZyb20gJ0BnbGltbWVyL2ludGVyZmFjZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gZGljdDxUID0gdW5rbm93bj4oKTogRGljdDxUPiB7XG4gIHJldHVybiBPYmplY3QuY3JlYXRlKG51bGwpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNEaWN0PFQ+KHU6IFQpOiB1IGlzIERpY3QgJiBUIHtcbiAgcmV0dXJuIHUgIT09IG51bGwgJiYgdSAhPT0gdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3Q8VD4odTogVCk6IHUgaXMgb2JqZWN0ICYgVCB7XG4gIHJldHVybiB0eXBlb2YgdSA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIHUgPT09ICdvYmplY3QnICYmIHUgIT09IG51bGwpO1xufVxuXG5leHBvcnQgY2xhc3MgU3RhY2tJbXBsPFQ+IGltcGxlbWVudHMgU3RhY2s8VD4ge1xuICBwcml2YXRlIHN0YWNrOiBUW107XG4gIHB1YmxpYyBjdXJyZW50OiBPcHRpb248VD4gPSBudWxsO1xuXG4gIGNvbnN0cnVjdG9yKHZhbHVlczogVFtdID0gW10pIHtcbiAgICB0aGlzLnN0YWNrID0gdmFsdWVzO1xuICB9XG5cbiAgcHVibGljIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLnN0YWNrLmxlbmd0aDtcbiAgfVxuXG4gIHB1c2goaXRlbTogVCkge1xuICAgIHRoaXMuY3VycmVudCA9IGl0ZW07XG4gICAgdGhpcy5zdGFjay5wdXNoKGl0ZW0pO1xuICB9XG5cbiAgcG9wKCk6IE9wdGlvbjxUPiB7XG4gICAgbGV0IGl0ZW0gPSB0aGlzLnN0YWNrLnBvcCgpO1xuICAgIGxldCBsZW4gPSB0aGlzLnN0YWNrLmxlbmd0aDtcbiAgICB0aGlzLmN1cnJlbnQgPSBsZW4gPT09IDAgPyBudWxsIDogdGhpcy5zdGFja1tsZW4gLSAxXTtcblxuICAgIHJldHVybiBpdGVtID09PSB1bmRlZmluZWQgPyBudWxsIDogaXRlbTtcbiAgfVxuXG4gIG50aChmcm9tOiBudW1iZXIpOiBPcHRpb248VD4ge1xuICAgIGxldCBsZW4gPSB0aGlzLnN0YWNrLmxlbmd0aDtcbiAgICByZXR1cm4gbGVuIDwgZnJvbSA/IG51bGwgOiB0aGlzLnN0YWNrW2xlbiAtIGZyb21dO1xuICB9XG5cbiAgaXNFbXB0eSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zdGFjay5sZW5ndGggPT09IDA7XG4gIH1cblxuICB0b0FycmF5KCk6IFRbXSB7XG4gICAgcmV0dXJuIHRoaXMuc3RhY2s7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=","import type { ComponentInstance } from '@glimmer/interfaces';\nimport { Stack } from '@glimmer/util';\nimport type ContextRegistry from '../context-registry';\n\n// Map of component class that contain @provide decorated properties, with their\n// respective context keys and property names\nexport const DECORATED_PROPERTY_CLASSES = new WeakMap<\n  any,\n  Record<keyof ContextRegistry, string>\n>();\n// Map of instances of the ContextProvider component, or components that contain\n// @provide decorated properties\nexport const PROVIDER_INSTANCES = new WeakMap<any, Record<string, string>>();\n\nexport function trackProviderInstanceContexts(\n  instance: any,\n  contextDefinitions: [\n    contextKey: keyof ContextRegistry,\n    propertyKey: string,\n  ][],\n) {\n  const currentContexts = PROVIDER_INSTANCES.get(instance);\n  if (currentContexts == null) {\n    PROVIDER_INSTANCES.set(instance, Object.fromEntries(contextDefinitions));\n  } else {\n    PROVIDER_INSTANCES.set(instance, {\n      ...currentContexts,\n      ...Object.fromEntries(contextDefinitions),\n    });\n  }\n}\n\ninterface Contexts {\n  [contextKey: keyof ContextRegistry]: ContextEntry;\n}\n\ninterface ContextEntry {\n  // instance is an instance of a Glimmer component\n  instance: any;\n  // the property to read from the provider instance\n  key: string;\n}\n\nexport class ProvideConsumeContextContainer {\n  private stack = new Stack();\n\n  get current() {\n    return this.stack.current;\n  }\n\n  // The keys of the WeakMap are component instances (actual Glimmer components,\n  // not the VM ones).\n  // The values are objects that map a string ID (provider ID) to the provider\n  // component instance.\n  contexts = new WeakMap<any, Contexts>();\n\n  begin(): void {\n    this.reset();\n  }\n\n  commit(): void {\n    this.reset();\n  }\n\n  private reset(): void {\n    if (this.stack.size !== 0) {\n      while (!this.stack.isEmpty()) {\n        this.stack.pop();\n      }\n    }\n  }\n\n  enter(instance: ComponentInstance): void {\n    const componentDefinitionClass = instance.definition.state;\n    const actualComponentInstance = (instance?.state as any)?.component;\n\n    if (actualComponentInstance != null) {\n      const isDecorated = DECORATED_PROPERTY_CLASSES.has(\n        componentDefinitionClass,\n      );\n\n      // If this is an instance of a component that contains @provide decorated\n      // properties, add this instance - and the context keys - to the\n      // PROVIDE_INSTANCES map, so that the context values can be set in the\n      // next step\n      if (isDecorated) {\n        const contextKeys = DECORATED_PROPERTY_CLASSES.get(\n          componentDefinitionClass,\n        );\n\n        if (contextKeys != null) {\n          trackProviderInstanceContexts(\n            actualComponentInstance,\n            Object.entries(contextKeys) as [keyof ContextRegistry, string][],\n          );\n        }\n      }\n\n      const isProviderInstance = PROVIDER_INSTANCES.has(\n        actualComponentInstance,\n      );\n\n      if (isProviderInstance) {\n        this.registerProvider(actualComponentInstance);\n      } else {\n        this.registerComponent(actualComponentInstance);\n      }\n\n      this.stack.push(actualComponentInstance);\n    }\n  }\n\n  exit(instance: ComponentInstance): void {\n    const actualComponentInstance = (instance?.state as any)?.component;\n\n    if (actualComponentInstance != null) {\n      this.stack.pop();\n    }\n  }\n\n  private registerProvider(provider: any) {\n    const { current } = this;\n\n    let providerContexts: Contexts = {};\n    if (this.contexts.has(current)) {\n      // If a provider is nested within another provider, we merge their\n      // contexts\n      const context = this.contexts.get(current);\n      if (context != null) {\n        providerContexts = { ...context };\n      }\n    }\n\n    const registeredContexts = PROVIDER_INSTANCES.get(provider);\n    if (registeredContexts != null) {\n      Object.entries(registeredContexts).forEach(([contextKey, key]) => {\n        if (key in provider) {\n          providerContexts[contextKey] = {\n            instance: provider,\n            key,\n          };\n        }\n      });\n    }\n\n    this.contexts.set(provider, providerContexts);\n  }\n\n  private registerComponent(component: any) {\n    const { current } = this;\n\n    // If a current context reference exists, register the component to it\n    if (this.contexts.has(current)) {\n      const context = this.contexts.get(current);\n      if (context != null) {\n        this.contexts.set(component, context);\n      }\n    }\n  }\n}\n"],"names":["StackImpl","constructor","values","current","stack","size","length","push","item","pop","len","undefined","nth","from","isEmpty","toArray","DECORATED_PROPERTY_CLASSES","WeakMap","PROVIDER_INSTANCES","trackProviderInstanceContexts","instance","contextDefinitions","currentContexts","get","set","Object","fromEntries","ProvideConsumeContextContainer","_defineProperty","Stack","begin","reset","commit","enter","componentDefinitionClass","definition","state","actualComponentInstance","component","isDecorated","has","contextKeys","entries","isProviderInstance","registerProvider","registerComponent","exit","provider","providerContexts","contexts","context","registeredContexts","forEach","contextKey","key"],"mappings":"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","x_google_ignoreList":[0]}